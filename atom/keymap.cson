  #######################################################
  ##  filename: keymap.cson                            ##
  ##  path:     ~/src/config/dotfiles/atom/            ##
  ##  symlink:  ~/.atom/                               ##
  ##  purpose:  atom editor keymap                     ##
  ##  date:     04/19/2016                             ##
  ##  repo:     https://github.com/WebAppNut/dotfiles  ##
  #######################################################


# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# https://github.com/jasonrudolph/dotfiles/blob/master/atom/keymap.cson

'atom-workspace atom-pane, atom-workspace atom-text-editor:not(.mini)':
  # 'ctrl-h': 'window:focus-pane-on-left'
  # 'ctrl-j': 'window:focus-pane-below'
  # 'ctrl-k': 'window:focus-pane-above'
  # 'ctrl-l': 'window:focus-pane-on-right'
  #
  'ctrl-left': 'window:focus-pane-on-left'
  'ctrl-down': 'window:focus-pane-below'
  'ctrl-up': 'window:focus-pane-above'
  'ctrl-right': 'window:focus-pane-on-right'

  'ctrl-\\': 'pane:split-right-and-copy-active-item'
  'ctrl--': 'pane:split-down-and-copy-active-item'

# 'atom-workspace atom-text-editor:not(.mini)':
  # 'ctrl-;': 'editor:delete-to-end-of-line'

  # 'ctrl-g j': 'dot-atom:center-next-diff'
  # 'ctrl-g k': 'dot-atom:center-previous-diff'
  #
  # 'ctrl-. h': 'dot-atom:move-to-top-visible-line'
  # 'ctrl-. m': 'dot-atom:move-to-middle-visible-line'
  # 'ctrl-. l': 'dot-atom:move-to-bottom-visible-line'
  # 'ctrl-. t': 'dot-atom:scroll-cursor-to-top'
  # 'ctrl-. z': 'dot-atom:scroll-cursor-to-center'
  # 'ctrl-. b': 'dot-atom:scroll-cursor-to-bottom'
  #
  # 'ctrl-d': 'toggle-markdown-task:toggle'
  #
# The maximize-panes package (https://atom.io/packages/maximize-panes)
# overwrites Atom's default keybinding for the 'editor:newline-above' command.
# Let's restore that keybinding.
'.platform-darwin atom-workspace atom-text-editor:not([mini])':
  'shift-cmd-enter': 'editor:newline-above'
  'alt-cmd-m': 'maximize-panes:maximize'

'.platform-darwin atom-workspace':
  # 'shift-cmd-T': 'platformio-ide-terminal:new'
  'ctrl-n': 'platformio-ide-terminal:new'
  'shift-cmd-J': 'platformio-ide-terminal:prev'
  'shift-cmd-K': 'platformio-ide-terminal:next'
  'shift-cmd-X': 'platformio-ide-terminal:close'
  'ctrl-enter': 'platformio-ide-terminal:insert-selected-text'
  'ctrl-`': 'platformio-ide-terminal:toggle'

'.platform-darwin .platformio-ide-terminal .terminal':
  'cmd-c': 'platformio-ide-terminal:copy'
  'cmd-v': 'platformio-ide-terminal:paste'
  # 'ctrl-n': 'platformio-ide-terminal:new'

#
# 'atom-workspace':
#   'alt-cmd-ctrl-b': 'dot-atom:demo'
#   'alt-cmd-s': 'dot-atom:save-all'

'atom-workspace, .command-palette atom-text-editor':
  'cmd-p': 'command-palette:toggle'
